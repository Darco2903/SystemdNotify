plugins {
    id "java"
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    implementation(project(":common"))
    compileOnly("org.spigotmc:spigot-api:${minecraft_version}-R0.1-SNAPSHOT")
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion(minecraft_version_short)
    }
}

def targetJavaVersion = java_version.toInteger()
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(targetJavaVersion))
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [
            name      : project_name,
            version   : version,
            apiVersion: minecraft_version_short,
    ]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    archiveBaseName.set("${project_name}-${loader_type}-${minecraft_version}")
    archiveVersion.set("v${version}")
    archiveClassifier.set("")
//    configurations = [project.configurations.runtimeClasspath]
    dependencies {
        include(project(":common"))
    }
}

build {
    dependsOn shadowJar
}
